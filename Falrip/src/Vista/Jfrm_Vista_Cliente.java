/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Vista;

import Controlador.Registro;
import Modelo.Cliente;
import Modelo.Comuna;
import Modelo.ProfesionOficio;
import Modelo.Provincia;
import Modelo.Region;
import Modelo.TipoCliente;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author CAMILO
 */
public class Jfrm_Vista_Cliente extends javax.swing.JFrame {

    /**
     * Creates new form Jfrm_Vista_Cliente
     */
    public Jfrm_Vista_Cliente() {
        initComponents();
        cargarRegiones();
        cargarProfesiones();   
        cargarTiposCliente();
        jcbmx_provincia.removeAllItems();
        jcbmx_comuna.removeAllItems();
        jcbmx_provincia.addItem(new Provincia()); // Placeholder
        jcbmx_comuna.addItem(new Comuna());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jtxt_run = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jtxt_nombreCompleto = new javax.swing.JTextField();
        jtxt_correo = new javax.swing.JTextField();
        jtxt_fono = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jcbmx_region = new javax.swing.JComboBox();
        jcbmx_provincia = new javax.swing.JComboBox();
        jcbmx_comuna = new javax.swing.JComboBox();
        jbtn_agregar = new javax.swing.JButton();
        jtxt_dia_fc = new javax.swing.JTextField();
        jtxt_mes_fc = new javax.swing.JTextField();
        jtxt_anio_fc = new javax.swing.JTextField();
        jtxt_dia_ins = new javax.swing.JTextField();
        jtxt_mes_ins = new javax.swing.JTextField();
        jtxt_anio_ins = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jtxt_direccion = new javax.swing.JTextField();
        jcmbx_profesion = new javax.swing.JComboBox();
        jcmbx_tipo_cliente = new javax.swing.JComboBox();
        jbtn_limpiar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("Registro de Clientes");

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setText("Run");

        jLabel3.setText("Nombre Completo");

        jLabel4.setText("Fecha Nacimiento");

        jLabel5.setText("Fecha Inscripcion");

        jLabel6.setText("Correo");

        jLabel7.setText("Fono");

        jLabel8.setText("Region");

        jLabel9.setText("Provincia");

        jLabel10.setText("Comuna");

        jLabel11.setText("Profesion");

        jtxt_correo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxt_correoActionPerformed(evt);
            }
        });

        jLabel12.setText("Tipo Cliente");

        jcbmx_region.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbmx_region.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbmx_regionItemStateChanged(evt);
            }
        });
        jcbmx_region.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbmx_regionActionPerformed(evt);
            }
        });

        jcbmx_provincia.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbmx_provincia.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbmx_provinciaItemStateChanged(evt);
            }
        });

        jcbmx_comuna.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbmx_comuna.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcbmx_comunaItemStateChanged(evt);
            }
        });

        jbtn_agregar.setText("Agregar");
        jbtn_agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn_agregarActionPerformed(evt);
            }
        });

        jLabel13.setText("/");

        jLabel14.setText("/");

        jLabel15.setText("/");

        jLabel16.setText("/");

        jLabel17.setText("Direccion");

        jcmbx_profesion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jcmbx_tipo_cliente.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jbtn_limpiar.setText("Limpiar");
        jbtn_limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtn_limpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE))
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(jbtn_agregar))
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jcbmx_region, 0, 288, Short.MAX_VALUE)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jtxt_dia_ins)
                                            .addComponent(jtxt_dia_fc))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jtxt_mes_fc)
                                            .addComponent(jtxt_mes_ins))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jtxt_anio_fc)
                                            .addComponent(jtxt_anio_ins)))
                                    .addComponent(jtxt_fono)
                                    .addComponent(jtxt_correo)
                                    .addComponent(jtxt_nombreCompleto)
                                    .addComponent(jtxt_run)
                                    .addComponent(jtxt_direccion)
                                    .addComponent(jcbmx_provincia, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(45, 120, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE))
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jcbmx_comuna, 0, 252, Short.MAX_VALUE)
                                    .addComponent(jcmbx_profesion, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jcmbx_tipo_cliente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(28, 28, 28))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jbtn_limpiar)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jtxt_run, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(jcbmx_comuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(jtxt_nombreCompleto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addGap(27, 27, 27)
                                .addComponent(jLabel5))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel11)
                                    .addComponent(jcmbx_profesion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(jcmbx_tipo_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtxt_dia_fc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxt_mes_fc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxt_anio_fc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtxt_dia_ins, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxt_mes_ins, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxt_anio_ins, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16))))
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jtxt_correo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxt_fono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jtxt_direccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jcbmx_region, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jcbmx_provincia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtn_agregar)
                    .addComponent(jbtn_limpiar))
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu1.setText("Opciones");

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("Lista Cliente");
        jCheckBoxMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jCheckBoxMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Exit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem1ActionPerformed
        // TODO add your handling code here:
        
       Jfrm_Clientes_Lista listadocl = new Jfrm_Clientes_Lista();
       listadocl.setVisible(true);
               
    }//GEN-LAST:event_jCheckBoxMenuItem1ActionPerformed

    private void jbtn_agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn_agregarActionPerformed
        // TODO add your handling code here:
       try {
            // --- 1. PROCESAR RUN ---
            String runInput = this.jtxt_run.getText().trim();
            if (runInput.isEmpty() || !runInput.matches("^[0-9]{1,10}-[0-9Kk]$")) {
                 JOptionPane.showMessageDialog(this, "Formato de RUN inválido (Ej: 1234567890-K).", "Error de Formato", JOptionPane.WARNING_MESSAGE);
                 this.jtxt_run.requestFocus(); // Poner foco en el campo
                 return;
            }
            String runLimpio = runInput.replace(".", "").replace("-", "");
            String dvrun = runLimpio.substring(runLimpio.length() - 1).toUpperCase();
            long numrun = Long.parseLong(runLimpio.substring(0, runLimpio.length() - 1));

            // --- 2. PROCESAR NOMBRE COMPLETO ---
            String nombreInput = this.jtxt_nombreCompleto.getText().trim();
             if (nombreInput.isEmpty()) {
                 JOptionPane.showMessageDialog(this, "El nombre completo no puede estar vacío.", "Dato Requerido", JOptionPane.WARNING_MESSAGE);
                 this.jtxt_nombreCompleto.requestFocus();
                 return;
             }
            String[] partesNombre = nombreInput.split("\\s+"); // Separa por uno o más espacios
            String pnombre, snombre = null, appaterno, apmaterno = null;

            if (partesNombre.length >= 2) { // Mínimo Nombre + Apellido Paterno
                pnombre = partesNombre[0];
                appaterno = partesNombre[partesNombre.length - (partesNombre.length > 2 ? 2 : 1)]; // Penúltimo o último si solo hay 2
                if (partesNombre.length > 2) { // Hay apellido materno
                     apmaterno = partesNombre[partesNombre.length - 1]; // Último
                }
                 if (partesNombre.length > 3) { // Hay segundo nombre (y materno)
                    StringBuilder sbSnombre = new StringBuilder();
                    for(int i=1; i < partesNombre.length - 2; i++){
                        sbSnombre.append(partesNombre[i]).append(" ");
                    }
                    snombre = sbSnombre.toString().trim();
                 } else if (partesNombre.length == 3 && apmaterno == null) { // Caso Nombre ApellidoP ApellidoM sin Snombre
                     apmaterno = partesNombre[2];
                 }

            } else {
                JOptionPane.showMessageDialog(this, "Formato de nombre no válido. Use al menos Nombre y Apellido Paterno.", "Error de Formato", JOptionPane.ERROR_MESSAGE);
                this.jtxt_nombreCompleto.requestFocus();
                return;
            }


            // --- 3. PROCESAR FECHAS ---
            Date fechaNac = parseFecha(this.jtxt_dia_fc.getText(), this.jtxt_mes_fc.getText(), this.jtxt_anio_fc.getText());
            Date fechaIns = parseFecha(this.jtxt_dia_ins.getText(), this.jtxt_mes_ins.getText(), this.jtxt_anio_ins.getText());
            // Validar que fecha de inscripción no sea anterior a nacimiento
             if(fechaIns.before(fechaNac)){
                 JOptionPane.showMessageDialog(this, "La fecha de inscripción no puede ser anterior a la fecha de nacimiento.", "Error de Fecha", JOptionPane.WARNING_MESSAGE);
                 return;
             }


            // --- 4. DATOS SIMPLES ---
            String correo = this.jtxt_correo.getText().trim();
            if (!correo.isEmpty() && !correo.matches("^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$")) { // Validación más robusta
                 JOptionPane.showMessageDialog(this, "Formato de correo inválido.", "Error de Formato", JOptionPane.WARNING_MESSAGE);
                 this.jtxt_correo.requestFocus();
                 return;
            }
            if (correo.isEmpty()) correo = null;

            // Validar Fono antes de convertir
             String fonoStr = this.jtxt_fono.getText().trim();
             if(fonoStr.isEmpty() || !fonoStr.matches("^[0-9]+$")){
                  JOptionPane.showMessageDialog(this, "El Fono debe contener solo números.", "Error de Formato", JOptionPane.WARNING_MESSAGE);
                  this.jtxt_fono.requestFocus();
                  return;
             }
            long fono = Long.parseLong(fonoStr);

            String direccion = this.jtxt_direccion.getText().trim();
         if (direccion.isEmpty()) {
             JOptionPane.showMessageDialog(this, "La dirección es obligatoria.", "Error", JOptionPane.WARNING_MESSAGE); this.jtxt_direccion.requestFocus(); return;
         }


            // --- 5. OBTENER CÓDIGOS (IDs) DE LOS COMBOBOX ---
            Region regionSel = (Region) this.jcbmx_region.getSelectedItem();
            Provincia provSel = (Provincia) this.jcbmx_provincia.getSelectedItem();
            Comuna comSel = (Comuna) this.jcbmx_comuna.getSelectedItem();
            ProfesionOficio profSel = (ProfesionOficio) this.jcmbx_profesion.getSelectedItem();
            TipoCliente tipoSel = (TipoCliente) this.jcmbx_tipo_cliente.getSelectedItem();

            if (regionSel == null || regionSel.getCodRegion() == 0 ||
                provSel == null || provSel.getCodProvincia() == 0 ||
                comSel == null || comSel.getCodComuna() == 0 ||
                profSel == null || profSel.getCodProfOfic() == 0 ||
                tipoSel == null || tipoSel.getCodTipoCliente() == 0) {
                JOptionPane.showMessageDialog(this, "Debe seleccionar Región, Provincia, Comuna, Profesión y Tipo de Cliente.", "Datos incompletos", JOptionPane.WARNING_MESSAGE);
                return;
            }

            int codRegion = regionSel.getCodRegion();
            int codProvincia = provSel.getCodProvincia();
            int codComuna = comSel.getCodComuna();
            int codProfesion = profSel.getCodProfOfic();
            int codTipoCliente = tipoSel.getCodTipoCliente();

            // --- 6. CONSTRUIR EL OBJETO CLIENTE ---
            Cliente cli = new Cliente();
            cli.setRun((int) numrun);
            cli.setDvrun(dvrun);
            cli.setPnombre(pnombre);
            cli.setSnombre(snombre);
            cli.setAppaterno(appaterno);
            cli.setApmaterno(apmaterno);
            cli.setFechaNacimiento(fechaNac);
            cli.setFechaInscripcion(fechaIns);
            cli.setCorreo(correo);
            cli.setFonoContacto((int) fono);
            cli.setDireccion(direccion);

            Region reg = new Region(); reg.setCodRegion(codRegion); cli.setReg(reg);
            Provincia prov = new Provincia(); prov.setCodProvincia(codProvincia); cli.setProv(prov);
            Comuna com = new Comuna(); com.setCodComuna(codComuna); cli.setCom(com);
            ProfesionOficio prof = new ProfesionOficio(); prof.setCodProfOfic(codProfesion); cli.setProf(prof);
            TipoCliente tipo = new TipoCliente(); tipo.setCodTipoCliente(codTipoCliente); cli.setTipocl(tipo);

            // --- 7. ENVIAR A LA BASE DE DATOS ---
            Registro rg = new Registro();
            if (rg.agregarCliente(cli)) {
                JOptionPane.showMessageDialog(this, "Cliente " + nombreInput + " agregado exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                
            } else {
                JOptionPane.showMessageDialog(this, "Error: No se pudo agregar el cliente. Verifique la consola para más detalles.", "Error de Base de Datos", JOptionPane.ERROR_MESSAGE);
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Error de formato numérico: Verifique RUN y Fono.", "Error de Formato", JOptionPane.ERROR_MESSAGE);
             // Podrías identificar qué campo falló
             try { Long.parseLong(jtxt_run.getText().replace(".", "").replace("-", "").substring(0, jtxt_run.getText().length()-2)); }
             catch(Exception exRun) { jtxt_run.requestFocus(); return; }
             try { Long.parseLong(jtxt_fono.getText()); }
             catch(Exception exFono) { jtxt_fono.requestFocus(); return; }

        } catch (java.text.ParseException e) {
            JOptionPane.showMessageDialog(this, "Error en formato de fecha: " + e.getMessage() + ". Use dd/MM/yyyy.", "Error de Fecha", JOptionPane.ERROR_MESSAGE);
             // Poner foco en el primer campo de fecha erróneo
             if(e.getMessage().contains("fecha")) { // Asumiendo que parseFecha lanza mensaje claro
                 if(e.getErrorOffset() < 10) { jtxt_dia_fc.requestFocus(); } // Simplificación
                 else { jtxt_dia_ins.requestFocus();}
             }

        } catch (ArrayIndexOutOfBoundsException | StringIndexOutOfBoundsException e) {
             JOptionPane.showMessageDialog(this, "Error al procesar RUN o Nombre Completo. Verifique el formato ingresado (Ej: Nombre ApellidoP ApellidoM).", "Error Formato Texto", JOptionPane.ERROR_MESSAGE);
             if(e instanceof StringIndexOutOfBoundsException) jtxt_run.requestFocus(); else jtxt_nombreCompleto.requestFocus();
        } catch (ClassCastException e) {
             JOptionPane.showMessageDialog(this, "Error interno al leer selección de lista desplegable. Intente de nuevo.", "Error ComboBox", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) { // Captura general para otros errores (BD, etc.)
            String errorMsg = e.getMessage();
             if (errorMsg != null && errorMsg.contains("ORA-00001")) {
                 JOptionPane.showMessageDialog(this, "Error: El RUN " + jtxt_run.getText() + " ya existe en la base de datos.", "RUN Duplicado", JOptionPane.ERROR_MESSAGE);
                 jtxt_run.requestFocus();
             } else if (errorMsg != null && errorMsg.contains("ORA-01400")) {
                 JOptionPane.showMessageDialog(this, "Error: Faltan datos obligatorios. Verifique los campos marcados con (*).", "Datos Faltantes", JOptionPane.ERROR_MESSAGE);
                 // Sería ideal identificar qué campo falta
             } else if (errorMsg != null && errorMsg.contains("ORA-02291")) {
                  JOptionPane.showMessageDialog(this, "Error: El código ingresado para Región, Provincia, Comuna, Profesión o Tipo Cliente no existe.", "Código Inválido", JOptionPane.ERROR_MESSAGE);
             }
             else {
                 JOptionPane.showMessageDialog(this, "Ocurrió un error inesperado: " + errorMsg, "Error General", JOptionPane.ERROR_MESSAGE);
             }
            e.printStackTrace();
        }
    }
        /**
        * Convierte tres strings (dia, mes, anio) en un objeto java.util.Date.
        * Lanza una excepción ParseException si la fecha es inválida.
        */
        private java.util.Date parseFecha(String dia, String mes, String anio) throws java.text.ParseException {

            // Validamos que no estén vacíos
            if (dia.isEmpty() || mes.isEmpty() || anio.isEmpty()) {
                throw new java.text.ParseException("Los campos de fecha no pueden estar vacíos", 0);
            }

            String fechaStr = dia + "/" + mes + "/" + anio;
            SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");

            // setLenient(false) obliga a que la fecha sea estricta (ej: no acepta 30/02/2000)
            formato.setLenient(false);

            return formato.parse(fechaStr);

    }//GEN-LAST:event_jbtn_agregarActionPerformed

    private void jcbmx_comunaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbmx_comunaItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbmx_comunaItemStateChanged

    private void jcbmx_provinciaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbmx_provinciaItemStateChanged
        // TODO add your handling code here:

                     
    if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
        Provincia provSeleccionada = (Provincia) this.jcbmx_provincia.getSelectedItem();
        
        this.jcbmx_comuna.removeAllItems();
        
        // ¡Validación de seguridad!
        if (provSeleccionada != null && provSeleccionada.getCodProvincia() > 0) {
            int idProvincia = provSeleccionada.getCodProvincia();
            Registro rg = new Registro();
            List<Comuna> comunas = rg.obtenerComunasPorProvincia(idProvincia);
            
            this.jcbmx_comuna.addItem(new Comuna()); // Agregamos el "Seleccione..."
            for (Comuna com : comunas) {
                this.jcbmx_comuna.addItem(com);
            }
        }
    }

    }//GEN-LAST:event_jcbmx_provinciaItemStateChanged

    private void jcbmx_regionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbmx_regionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbmx_regionActionPerformed

    private void jcbmx_regionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcbmx_regionItemStateChanged
    
        
    if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
        Region regionSeleccionada = (Region) this.jcbmx_region.getSelectedItem();
        
        this.jcbmx_provincia.removeAllItems();
        this.jcbmx_comuna.removeAllItems(); 
        
        // ¡Validación de seguridad!
        if (regionSeleccionada != null && regionSeleccionada.getCodRegion() > 0) {
            int idRegion = regionSeleccionada.getCodRegion();
            Registro rg = new Registro();
            List<Provincia> provincias = rg.obtenerProvinciasPorRegion(idRegion);
            
            this.jcbmx_provincia.addItem(new Provincia()); // Agregamos el "Seleccione..."
            for (Provincia prov : provincias) {
                this.jcbmx_provincia.addItem(prov);
            }
        }
    }

    }//GEN-LAST:event_jcbmx_regionItemStateChanged

    private void jtxt_correoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxt_correoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxt_correoActionPerformed

    private void jbtn_limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtn_limpiarActionPerformed
        // TODO add your handling code here:
    jtxt_run.setText("");
    jtxt_nombreCompleto.setText("");
    
    //Fecha Nacimiento
    jtxt_dia_fc.setText("");
    jtxt_mes_fc.setText("");
    jtxt_anio_fc.setText("");
    
    
    //Fecha inscripcion
    jtxt_dia_ins.setText("");
    jtxt_mes_ins.setText("");
    jtxt_anio_ins.setText("");
    jtxt_correo.setText("");
    jtxt_fono.setText("");
    jtxt_direccion.setText("");
    
    //Region
    
    jcbmx_region.setSelectedIndex(0); 
    
    
    //Combo box 
    
    jcmbx_profesion.setSelectedIndex(0);
    jcmbx_tipo_cliente.setSelectedIndex(0);
    jtxt_run.requestFocus();
        
        
    }//GEN-LAST:event_jbtn_limpiarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Jfrm_Vista_Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Jfrm_Vista_Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Jfrm_Vista_Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Jfrm_Vista_Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Jfrm_Vista_Cliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JButton jbtn_agregar;
    private javax.swing.JButton jbtn_limpiar;
    private javax.swing.JComboBox jcbmx_comuna;
    private javax.swing.JComboBox jcbmx_provincia;
    private javax.swing.JComboBox jcbmx_region;
    private javax.swing.JComboBox jcmbx_profesion;
    private javax.swing.JComboBox jcmbx_tipo_cliente;
    private javax.swing.JTextField jtxt_anio_fc;
    private javax.swing.JTextField jtxt_anio_ins;
    private javax.swing.JTextField jtxt_correo;
    private javax.swing.JTextField jtxt_dia_fc;
    private javax.swing.JTextField jtxt_dia_ins;
    private javax.swing.JTextField jtxt_direccion;
    private javax.swing.JTextField jtxt_fono;
    private javax.swing.JTextField jtxt_mes_fc;
    private javax.swing.JTextField jtxt_mes_ins;
    private javax.swing.JTextField jtxt_nombreCompleto;
    private javax.swing.JTextField jtxt_run;
    // End of variables declaration//GEN-END:variables


private void cargarRegiones() {
    Registro rg = new Registro();
    List<Region> regiones = rg.obtenerRegiones();
    
    this.jcbmx_region.removeAllItems();
    
    // Agregamos un item "nulo" para que sirva como "Seleccione..."
    this.jcbmx_region.addItem(new Region()); 

    for (Region region : regiones) {
        this.jcbmx_region.addItem(region); // Agregamos el OBJETO completo
    }
}
private void cargarProfesiones() {
    Registro rg = new Registro();
    List<ProfesionOficio> profesiones = rg.obtenerProfesiones();
    
    this.jcmbx_profesion.removeAllItems();
    this.jcmbx_profesion.addItem(new ProfesionOficio()); // Agrega el item "Seleccione..."

    for (ProfesionOficio prof : profesiones) {
        this.jcmbx_profesion.addItem(prof); // Agregamos el OBJETO
    }
}

private void cargarTiposCliente() {
    Registro rg = new Registro();
    List<TipoCliente> tipos = rg.obtenerTiposCliente();
    
    this.jcmbx_tipo_cliente.removeAllItems();
    this.jcmbx_tipo_cliente.addItem(new TipoCliente()); // Agrega el item "Seleccione..."

    for (TipoCliente tipo : tipos) {
        this.jcmbx_tipo_cliente.addItem(tipo); // Agregamos el OBJETO
    }
}

}

